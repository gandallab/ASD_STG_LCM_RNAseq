
R version 3.4.1 (2017-06-30) -- "Single Candle"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> tmp=.libPaths()
> .libPaths(tmp[c(2,4)])
> rm(list=ls());gc()
         used (Mb) gc trigger (Mb) max used (Mb)
Ncells 252011 13.5     460000 24.6   350000 18.7
Vcells 442034  3.4    1023718  7.9   786428  6.0
> 
> library(WGCNA)
Loading required package: dynamicTreeCut
Loading required package: fastcluster

Attaching package: 'fastcluster'

The following object is masked from 'package:stats':

    hclust


==========================================================================
*
*  Package WGCNA 1.61 loaded.
*
*    Important note: It appears that your system supports multi-threading,
*    but it is not enabled within WGCNA in R. 
*    To allow multi-threading within WGCNA with all available cores, use 
*
*          allowWGCNAThreads()
*
*    within R. Use disableWGCNAThreads() to disable threading if necessary.
*    Alternatively, set the following environment variable on your system:
*
*          ALLOW_WGCNA_THREADS=<number_of_processors>
*
*    for example 
*
*          ALLOW_WGCNA_THREADS=24
*
*    To set the environment variable in linux bash shell, type 
*
*           export ALLOW_WGCNA_THREADS=24
*
*     before running R. Other operating systems or shells will
*     have a similar command to achieve the same aim.
*
==========================================================================



Attaching package: 'WGCNA'

The following object is masked from 'package:stats':

    cor

> enableWGCNAThreads()
Allowing parallel execution with up to 23 working processes.
> allowWGCNAThreads()
Allowing multi-threading with up to 24 threads.
> options(stringsAsFactors=FALSE)
> load("/oasis/scratch/comet/paz008/temp_project/wgcna003/voom.forWGCNA.input.oligo.v2.RData")
> powers = c(seq(1,9,by=1),seq(10,30,by=2))
> sft = pickSoftThreshold(data= t(datExpr), networkType = "signed", corFnc="bicor",verbose=2,powerVector=powers,blockSize = 30000)
 pickSoftThreshold: calculating connectivity for given powers...
   ..working on genes 1 through 13928 of 13928
   Power SFT.R.sq   slope truncated.R.sq  mean.k. median.k. max.k.
1      1 1.26e-05  0.2670          0.986 6990.000  6990.000 7270.0
2      2 2.80e-06  0.0682          0.984 3730.000  3730.000 4060.0
3      3 1.73e-03 -1.0700          0.986 2100.000  2100.000 2420.0
4      4 1.73e-04 -0.2400          0.987 1240.000  1230.000 1520.0
5      5 7.28e-04 -0.3660          0.990  755.000   751.000  994.0
6      6 2.09e-03 -0.4890          0.991  476.000   473.000  674.0
7      7 6.63e-03 -0.7130          0.991  310.000   307.000  471.0
8      8 2.11e-02 -1.0700          0.990  206.000   204.000  337.0
9      9 3.90e-02 -1.2600          0.988  141.000   139.000  247.0
10    10 6.42e-02 -1.4200          0.986   98.000    96.200  185.0
11    12 1.37e-01 -1.7400          0.982   50.100    48.800  108.0
12    14 2.33e-01 -1.9400          0.973   27.200    26.300   67.0
13    16 3.38e-01 -2.0300          0.950   15.600    14.900   43.2
14    18 5.42e-01 -2.5800          0.949    9.300     8.770   31.0
15    20 7.05e-01 -3.0200          0.947    5.780     5.370   23.6
16    22 8.06e-01 -3.0800          0.886    3.710     3.390   18.5
17    24 8.76e-01 -3.3100          0.861    2.450     2.190   16.2
18    26 5.18e-01 -4.7700          0.415    1.660     1.460   15.9
19    28 5.19e-01 -5.5700          0.406    1.160     0.987   15.7
20    30 5.21e-01 -5.8600          0.395    0.824     0.681   15.6
> pdf("sft.pdf")
> par(mfrow=c(2,1))
> plot(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2], xlab="Soft Thresh Power", ylab="Scale free R^2",type="n")
> text(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2], labels = powers, cex = 0.7, col="red",  xlab="Soft Thresh Power", ylab="Scale free R^2")
> abline(h=0.8, col="black")
> plot(sft$fitIndices[,1], sft$fitIndices[,5], xlab = "Soft threshold power", ylab = "Mean connectivity", type = "n")
> text(sft$fitIndices[,1], sft$fitIndices[,5], labels = powers, cex = 0.7, col="black")
> dev.off()
null device 
          1 
> save(sft,file="sft.RData")
> 
> proc.time()
   user  system elapsed 
 71.600  38.551  77.957 
